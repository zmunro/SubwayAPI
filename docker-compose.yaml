version: "3.7"

services:
  api:
    container_name: subwayapi
    volumes:
      - ./api/src:/usr/src/app
      - ./api/src/node_modules:/usr/src/app
    build:
      context: ./api/src
      dockerfile: ../dev.dockerfile
    entrypoint: ["npm", "run", "start:prod"]
    env_file:
      - .env
    ports:
      - 3000:3000
      - 9229:9229
    depends_on:
      - postgres
    networks:
      - nesjs-network
  postgres:
    container_name: postgres
    image: postgres:latest
    networks:
      - nesjs-network
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: "${POSTGRES_DB_PREFIX}_${POSTGRES_DB_NAME}"
      PG_DATA: /var/lib/postgresql/data
    ports:
      - ${POSTGRES_DB_PORT}:${POSTGRES_DB_PORT}
    volumes:
      - ./pgdata/data:/var/lib/postgresql/data
  pgadmin:
    links:
      - postgres:postgres
    container_name: pgadmin
    image: dpage/pgadmin4
    volumes:
      - ./pgdata/pgadmin:/root/.pgadmin
    env_file:
      - .env
    networks:
      - nesjs-network
  # nginx:
  #   image: nginx:stable-alpine
  #   container_name: nginx
  #   volumes:
  #     - ./nginx/templates:/etc/nginx/templates
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #   environment:
  #     - NGINX_PORT=${NGINX_PORT}
  #     - BACKEND_PORT=${BACKEND_PORT}
  #   ports:
  #     - 80:${NGINX_PORT}
  #   depends_on:
  #     - api
  #     - postgres
  #   networks:
  #     - nesjs-network
networks:
  nesjs-network:
